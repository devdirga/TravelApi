<?php

namespace Fastravel\Libraries\Parser\TravelBus;

use Fastravel\Libraries\Parser\ResponseParser;
use Fastravel\Libraries\Message\TravelBusMessage;
use Fastravel\Libraries\Parser\BaseResponseParser;
use Fastravel\Libraries\APIController;
use Fastravel\Libraries\Utility;

class BookResponseParser extends BaseResponseParser implements ResponseParser
{
    /**
     * TravelBus message response from core.
     * 
     * @var TravelBusMessage
     */
    protected $message;
    
    public function into(APIController $apiController)
    {
        $rc = $this->message->get(TravelBusMessage::FIELD_STATUS);
        $rd = $this->message->get(TravelBusMessage::FIELD_KETERANGAN);
        
        if($rc == "00")
        {
            $apiController->response->setDataAsObject();
            
            $apiController->response->data->message = $this->message->get(TravelBusMessage::FIELD_MESSAGE);
            $apiController->response->data->bookingCode = $this->message->get(TravelBusMessage::FIELD_KODE_BOOKING);
            $apiController->response->data->paymentCode = $this->message->get(TravelBusMessage::FIELD_KODE_PEMBAYARAN);
            $apiController->response->data->tiketNo = $this->message->get(TravelBusMessage::FIELD_NO_TIKET);
            $apiController->response->data->nominal = $this->message->get(TravelBusMessage::FIELD_NOMINAL);
            $apiController->response->data->nominalAdmin = $this->message->get(TravelBusMessage::FIELD_NOMINAL_ADMIN);
            $apiController->response->data->idTransaksi = $this->message->get(TravelBusMessage::FIELD_TRANSACTION_ID);
            $apiController->response->data->komisi = Utility::getKomisi($apiController,$this->message->get(TravelBusMessage::FIELD_TRANSACTION_ID));
            
        }
        
        $apiController->response->setStatus($rc, $rd);
    }
        
    
}