<?php

namespace Fastravel\Train;

use Fastravel\Libraries\APIController;
use Fastravel\Libraries\Message\TrainMessage;
use Fastravel\Libraries\Parser\Train\BookResponseParser;
use Fastravel\Libraries\MTI;

class BookController extends APIController
{
    protected $invoking = "Book Train";
    
    public function indexAction()
    {
        $this->setMTI(MTI::NKAIBOOK);
        $this->setProductCode($this->request->productCode);
        
        $message = new TrainMessage($this);
        
        $date = str_replace("-", "", $this->request->date);
        
        $message->set(TrainMessage::FIELD_ORG, $this->request->origin);
        $message->set(TrainMessage::FIELD_DES, $this->request->destination);
        $message->set(TrainMessage::FIELD_DEP_DATE, $date);
        $message->set(TrainMessage::FIELD_ARV_DATE, $date);
        
        $grade = "EKONOMI";
        
        if($this->request->grade == "E")
        {
            $grade = "EKSEKUTIF";
        }
        else if($this->request->grade == "B")
        {
            $grade = "BISNIS";
        }
        else if($this->request->grade == "K")
        {
            $grade = "EKONOMI";
        }
        
        $message->set(TrainMessage::FIELD_TRAIN_NO, $this->request->trainNumber);
        $message->set(TrainMessage::FIELD_CLASS, $grade);
        $message->set(TrainMessage::FIELD_SUBCLASS, $this->request->class);
        
        $message->set(TrainMessage::FIELD_NUM_PAX_ADULT, $this->request->adult);
        $message->set(TrainMessage::FIELD_NUM_PAX_CHILD, $this->request->child);
        $message->set(TrainMessage::FIELD_NUM_PAX_INFANT, $this->request->infant);
        
        $message->set(TrainMessage::FIELD_ROUTE, $this->request->origin . "-" . $this->request->destination);
        $message->set(TrainMessage::FIELD_PAX_NUM, $this->request->adult + $this->request->child + $this->request->infant);
        $message->set(TrainMessage::FIELD_TRAIN_NAME, $this->request->trainName);
        $message->set(TrainMessage::FIELD_ORIGINATION, $this->request->departureStation);
        $message->set(TrainMessage::FIELD_DEP_TIME, str_replace(":","",$this->request->departureTime));
        $message->set(TrainMessage::FIELD_DESTINATION, $this->request->arrivalStation);
        $message->set(TrainMessage::FIELD_ARV_TIME, str_replace(":","",$this->request->arrivalTime));        
        $message->set(TrainMessage::FIELD_PAX, "UMUM");
        $message->set(TrainMessage::FIELD_NOMINAL, ($this->request->priceAdult * $this->request->adult) + ($this->request->priceChild * $this->request->child) + ($this->request->priceInfant * $this->request->infant));
        $message->set(TrainMessage::FIELD_PRICE_ADULT, $this->request->priceAdult);
        $message->set(TrainMessage::FIELD_PRICE_CHILD, $this->request->priceChild);
        $message->set(TrainMessage::FIELD_PRICE_INFANT, $this->request->priceInfant);
        
        $i = 0;
        foreach($this->request->passengers->adults as $adult)
        {
            $message->set(TrainMessage::FIELD_ADULT_NAME1 + ($i * 4), substr($adult->name, 0, 24));
            $message->set(TrainMessage::FIELD_ADULT_BIRTHDATE1 + ($i * 4), str_replace("-", "", $adult->birthdate));
            $message->set(TrainMessage::FIELD_ADULT_ID_NO1 + ($i * 4), $adult->idNumber);
            $message->set(TrainMessage::FIELD_ADULT_MOBILE1 + ($i * 4), $adult->phone);
            
            $i++;
        }
        
        if(isset($this->request->passengers->children))
        {
            $i = 0;
            foreach($this->request->passengers->children as $child)
            {
                $message->set(TrainMessage::FIELD_CHILD_NAME1 + ($i * 2), substr($child->name, 0, 24) . "##");
                $message->set(TrainMessage::FIELD_CHILD_BIRTHDATE1 + ($i * 2), str_replace("-", "", $child->birthdate));
                
                $i++;
            }
        }
        
        for($child = intval($this->request->child) ; $child < 4 ; $child++){
            $message->set(TrainMessage::FIELD_CHILD_NAME1 + ($child * 2), "##");
        }
        
        if(isset($this->request->passengers->infants))
        {
            $i = 0;
            foreach($this->request->passengers->infants as $infant)
            {
                $message->set(TrainMessage::FIELD_INFANT_NAME1 + ($i * 2), substr($infant->name, 0, 24) . "#");
                $message->set(TrainMessage::FIELD_INFANT_BIRTHDATE1 + ($i * 2), str_replace("-", "", $infant->birthdate));
                
                $i++;
            }
        }
        
        for($inf = intval($this->request->infant) ; $inf < 4 ; $inf++){
            $message->set(TrainMessage::FIELD_INFANT_NAME1 + ($inf * 2), "#");
        }

        $this->sendToCore($message);
        
        BookResponseParser::instance()->parse($message)->into($this);
    }
}
