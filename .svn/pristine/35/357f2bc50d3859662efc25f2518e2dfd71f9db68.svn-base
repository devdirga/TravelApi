<?php

namespace Fastravel\Libraries\Parser\Hotel;

use Fastravel\Libraries\Parser\BaseResponseParser;
use Fastravel\Libraries\Parser\ResponseParser;
use Fastravel\Libraries\Message\HotelMessage;
use Fastravel\Libraries\APIController;
use Fastravel\Libraries\Utility;

class PaymentResponseParser extends BaseResponseParser implements ResponseParser
{
    /**
     * Hotel Message.
     * 
     * @var HotelMessage
     */
    protected $message;
    
    public function into(APIController $apiController)
    {
        $rc = $this->message->get(HotelMessage::FIELD_STATUS);
        $rd = $this->message->get(HotelMessage::FIELD_KETERANGAN);
        $apiController->response->setDataAsObject();
        
        if(Utility::isTesterOutlet($this->message->get(HotelMessage::FIELD_LOKET_ID)) || 
            (isset($apiController->request->simulateSuccess) && $apiController->request->simulateSuccess == true))
        {
            
            $apiController->response->setStatus("00", "Simulate Succes");
            $apiController->response->data->transaction_id =  $this->message->get(HotelMessage::FIELD_TRX_ID);
            $apiController->response->data->url_etiket = "http://api.fastravel.co.id/app/generate_etiket?id_transaksi=" . $this->message->get(HotelMessage::FIELD_TRX_ID) . "&id_outlet=".$this->message->get(HotelMessage::FIELD_LOKET_ID);
            $apiController->response->data->url_struk = "http://api.fastravel.co.id/app/generate_struk?id_transaksi=" . $this->message->get(HotelMessage::FIELD_TRX_ID);
            $apiController->response->data->nominal = $this->message->get(HotelMessage::FIELD_NOMINAL);
            $apiController->response->data->nominalAdmin = $this->message->get(HotelMessage::FIELD_NOMINAL_ADMIN);
            $apiController->response->data->mid = $this->message->get(HotelMessage::FIELD_MID);
            $apiController->response->data->transactionId = $this->message->get(HotelMessage::FIELD_TRX_ID);
            $apiController->response->data->hotel = json_decode(preg_replace('/[\x00-\x1F\x80-\xFF]/', '', $this->message->get(HotelMessage::FIELD_HOTEL_DATA)));
            $apiController->response->data->komisi = Utility::getKomisi($apiController,$this->message->get(HotelMessage::FIELD_TRX_ID));
            
        } else {
            
            if($rc == "00")
            {
                $apiController->response->data->transaction_id = $this->message->get(HotelMessage::FIELD_TRX_ID);
                $apiController->response->data->transactionId = $this->message->get(HotelMessage::FIELD_TRX_ID);
                $apiController->response->data->url_etiket = "http://api.fastravel.co.id/app/generate_etiket?id_transaksi=" . $this->message->get(HotelMessage::FIELD_TRX_ID) . "&id_outlet=".$this->message->get(HotelMessage::FIELD_LOKET_ID);
                $apiController->response->data->url_struk = "http://api.fastravel.co.id/app/generate_struk?id_transaksi=" . $this->message->get(HotelMessage::FIELD_TRX_ID);
                $apiController->response->data->nominal = $this->message->get(HotelMessage::FIELD_NOMINAL);
                $apiController->response->data->nominalAdmin = $this->message->get(HotelMessage::FIELD_NOMINAL_ADMIN);
                $apiController->response->data->mid = $this->message->get(HotelMessage::FIELD_MID);
                $apiController->response->data->komisi = Utility::getKomisi($apiController,$this->message->get(HotelMessage::FIELD_TRX_ID));
                $apiController->response->data->hotel = json_decode(preg_replace('/[\x00-\x1F\x80-\xFF]/', '', $this->message->get(HotelMessage::FIELD_HOTEL_DATA)));
            }
            else
            {
                $apiController->response->setStatus($rc,$rd);
            }   
        }
    }
}
