<?php

namespace Fastravel\Libraries\Parser\Flight;

use Fastravel\Libraries\Parser\BaseResponseParser;
use Fastravel\Libraries\Parser\ResponseParser;
use Fastravel\Libraries\Message\FlightMessage;
use Fastravel\Libraries\APIController;

class BaggageResponseParser extends BaseResponseParser implements ResponseParser
{
    /**
     * Flight Message.
     * 
     * @var FlightMessage
     */
    protected $message;
    
    public function into(APIController $apiController)
    {
        $rc = $this->message->get(FlightMessage::FIELD_STATUS);
        $rd = $this->message->get(FlightMessage::FIELD_KETERANGAN);
                        
        if($rc == "00")
        {
            $details = explode("#", $this->message->get(FlightMessage::FIELD_MESSAGE));
            $keys = explode(";",$details[0]);
            $prices = explode(";",$details[1]);
            $weights = explode(";",$details[2]);

            for($i = 0; $i < count($keys); $i++){
                $apiController->response->data[$i] = new \stdClass();
                $apiController->response->data[$i]->baggage_key = $keys[$i];
                $apiController->response->data[$i]->price = $prices[$i];
                $apiController->response->data[$i]->weight = $weights[$i];
            }
        }
        
        $apiController->response->mid = $this->message->get(FlightMessage::FIELD_MID);
        $apiController->response->setStatus($rc,$rd);
    }
}
